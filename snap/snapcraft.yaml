name: ifc6640
version: 20-1
summary: IFC6640 support package
description: |
 Support files for booting Inforce IFC6640
type: gadget

base: core20

architectures:
  - build-on: [amd64, arm64]
    run-on: arm64

confinement: strict
grade: stable

parts:
    prebuilt:
        plugin: dump
        source: prebuilt
        organize:
            '*': blobs/

    aboot:
        plugin: nil
        after:
            - arm-eabi-4-8
            - signlk
        source: http://git.linaro.org/landing-teams/working/qualcomm/lk.git
        source-branch: release/LA.HB.1.3.2-19600-8x96.0
        override-pull: |
          snapcraftctl pull
          if ls ${SNAPCRAFT_PROJECT_DIR}/aboot-*.patch 1> /dev/null 2>&1; then
              git apply ${SNAPCRAFT_PROJECT_DIR}/aboot-*.patch
          fi
          # get refrence snappy boot environment
          wget https://raw.githubusercontent.com/snapcore/snapd/master/include/lk/snappy_boot_common.h \
            -O app/aboot/snappy_boot_common.h
          wget https://raw.githubusercontent.com/snapcore/snapd/master/include/lk/snappy_boot_v2.h \
            -O app/aboot/snappy_boot_v2.h
        override-build: |
          export TOOLCHAIN_PREFIX=${SNAPCRAFT_STAGE}/arm-eabi-4.8/bin/arm-eabi-
          make -j$(nproc) msm8996 EMMC_BOOT=1 \
                                  VERIFIED_BOOT=1 \
                                  SNAPPY_BOOT=1
          mv ./build-msm8996/emmc_appsboot.mbn ./build-msm8996/emmc_appsboot_unsigned.mbn
          chmod 666 build-msm8996/emmc_appsboot_unsigned.mbn
          # sign aboot with random key
          ${SNAPCRAFT_STAGE}/signlk.sh -i=./build-msm8996/emmc_appsboot_unsigned.mbn \
                                       -o=./build-msm8996/emmc_appsboot.mbn -d
          mkdir -p ${SNAPCRAFT_PART_INSTALL}/blobs
          cp build-msm8996/emmc_appsboot.mbn \
             ${SNAPCRAFT_PART_INSTALL}/blobs/emmc_appsboot.mbn.random
          cp build-msm8996/emmc_appsboot_unsigned.mbn \
             ${SNAPCRAFT_PART_INSTALL}/blobs/emmc_appsboot.mbn.nonsecure
          ln ${SNAPCRAFT_PART_INSTALL}/blobs/emmc_appsboot.mbn.random \
             ${SNAPCRAFT_PART_INSTALL}/blobs/emmc_appsboot.mbn

    firmware-blobs:
        plugin: dump
        source: http://snapshots.linaro.org/96boards/dragonboard820c/linaro/rescue/latest/dragonboard-820c-bootloader-ufs-linux-*.zip
        source-type: zip
        organize:
             '*/*': blobs/
        stage:
            - -dragonboard-820c*
            - -blobs/flashall
            - -blobs/MD5SUMS.txt
            - -blobs/NON-HLOS.bin
            - -blobs/gpt_backup*.bin
            - -blobs/gpt_both*.bin
            - -blobs/gpt*
            - -blobs/emmc_appsboot.mbn
            - -blobs/rawprogram*
            - -blobs/patch*

    gpt-partitions:
        plugin: nil
        source: qdl
        after:
            - partitioning-tool
        override-build: |
            echo "Updating partition.xml sizes from gadget.yaml"
            sizes=$(grep -e 'size' ${SNAPCRAFT_PROJECT_DIR}/gadget.yaml | awk -F ": " '{ print $2}')
            for name in $(grep -e '- name:' ${SNAPCRAFT_PROJECT_DIR}/gadget.yaml | awk -F ": " '{ print $2}')
            do
               set $sizes; size=$1; shift; sizes="$*";
               case $size in
                    (0)  size="0" ;;
                    (*G | *g) size=$(expr $(echo $size | sed -e 's/G//g' -e 's/g//g') \* 1024 \* 1024) ;;
                    (*M | *m) size=$(expr $(echo $size | sed -e 's/M//g' -e 's/m//g') \* 1024) ;;
                    (*K | *k) size=$(echo $size | sed -e 's/K//g' -e 's/k//g') ;;
                    (*) size=$(expr $size / 1024) ;;
                esac
                sed -i 's/\"'"${name}"'-size\"/\"'"${size}"'\"/g' partition.xml
            done
            python3 ${SNAPCRAFT_STAGE}/ptool.py -x partition.xml -t .
            [ -e rawprogram0_BLANK_GPT.xml ] && rm rawprogram*_BLANK_GPT.xml
            [ -e rawprogram0_WIPE_PARTITIONS.xml ] && rm rawprogram*_WIPE_PARTITIONS.xml
            xmlmerge rawprogram*.xml -o ${SNAPCRAFT_PART_INSTALL}/rawprogram.xml
            xmlmerge patch*.xml -o ${SNAPCRAFT_PART_INSTALL}/patch.xml
            cp gpt_* ${SNAPCRAFT_PART_INSTALL}/
        organize:
             '*': blobs/
        stage:
            - blobs/gpt_b*.bin
            - blobs/gpt_main*.bin
            - blobs/patch.xml
            - blobs/rawprogram.xml

    snap-boot-sel-env:
        plugin: nil
        source: snap-boot-sel
        source-type: local
        override-pull: |
            snapcraftctl pull
            wget https://raw.githubusercontent.com/snapcore/snapd/master/include/lk/snappy_boot_common.h
            wget https://raw.githubusercontent.com/snapcore/snapd/master/include/lk/snappy_boot_v2.h
        override-build: |
            gcc lk-boot-env.c -I/usr/include/ -o lk-boot-env
            # configure initial boot environment
            ./lk-boot-env --runtime --write ${SNAPCRAFT_PART_INSTALL}/snapbootsel.bin \
                          --bootimg-file boot-db820c.img \
                          $( ./parse-yaml.sh ${SNAPCRAFT_PROJECT_DIR}/gadget.yaml runtime )
            ./lk-boot-env --recovery --write ${SNAPCRAFT_PART_INSTALL}/snaprecoverysel.bin \
                          --bootimg-file boot-db820c.img \
                          $( ./parse-yaml.sh ${SNAPCRAFT_PROJECT_DIR}/gadget.yaml recovery )
            ln -sf snaprecoverysel.bin ${SNAPCRAFT_PART_INSTALL}/lk.conf
        organize:
            snapbootsel.bin: blobs/snapbootsel.bin

    arm-eabi-4-8:
        plugin: dump
        source: git://codeaurora.org/platform/prebuilts/gcc/linux-x86/arm/arm-eabi-4.8.git
        source-depth: 1
        source-tag: LA.BR.1.1.3.c4-01000-8x16.0
        organize:
            '*': arm-eabi-4.8/
        prime:
            - -*

    signlk:
        plugin: dump
        source: https://git.linaro.org/landing-teams/working/qualcomm/signlk.git
        source-depth: 1
        source-type: git
        prime:
            - -*

    partitioning-tool:
        plugin: dump
        source: https://github.com/kubiko/partitioning_tool.git
        source-depth: 1
        source-type: git
        organize:
            LICENSE: LICENSE_for_ptool
        prime:
            - -*
build-packages:
    - python3
    - gwenhywfar-tools
    - build-essential
    - wget


slots:
  gpio-318:
    interface: gpio
    number: 318
  gpio-322:
    interface: gpio
    number: 322
  gpio-332:
    interface: gpio
    number: 332
  gpio-340:
    interface: gpio
    number: 340
  gpio-362:
    interface: gpio
    number: 362
  i2c-0:
    interface: i2c
    path: /dev/i2c-0
  i2c-1:
    interface: i2c
    path: /dev/i2c-1
  i2c-2:
    interface: i2c
    path: /dev/i2c-2
  i2c-3:
    interface: i2c
    path: /dev/i2c-3
  i2c-4:
    interface: i2c
    path: /dev/i2c-4
  spi-0:
    interface: spi
    path: /dev/spidev0.0
  spi-1:
    interface: spi
    path: /dev/spidev0.1
